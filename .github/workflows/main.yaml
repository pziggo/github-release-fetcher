name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    strategy:
      matrix:
        include:
          - { python-version: '3.10', os: ubuntu-latest }
          - { python-version: '3.10', os: macos-latest }
          - { python-version: '3.9', os: ubuntu-latest }
          - { python-version: '3.8', os: ubuntu-latest }
          - { python-version: '3.7', os: ubuntu-latest }
    name: Python ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - uses: actions/cache@v4
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/cache@v4
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - run: pip install --constraint=.github/workflows/constraints.txt nox
    - run: pip install --constraint=.github/workflows/constraints.txt poetry
    - run: nox --pythons '${{ matrix.python-version }}'